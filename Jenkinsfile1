pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                // Compilez votre application ici
                sh 'mvn clean package' // Exemple pour une application Java avec Maven
            }
        }

        stage('Test') {
            steps {
                // Exécutez des tests unitaires ou d'intégration ici
                sh 'mvn test' // Exemple pour les tests unitaires avec Maven
            }
        }

        stage('Deploy') {
            steps {
                // Déployez votre application sur votre environnement cible (par exemple, serveur de préproduction ou production)
                sh 'kubectl apply -f deployment.yaml' // Exemple pour un déploiement Kubernetes
            }
        }

        stage('Grafana') {
            steps {
                script {
                    def grafanaDashboardConfig = '''
                        {
                          "dashboard": {
                            "id": null,
                            "title": "My Jenkins Metrics",
                            "panels": [
                              {
                                "id": 1,
                                "type": "graph",
                                "title": "Build Duration",
                                "targets": [
                                  {
                                    "expr": "jenkins_build_duration_seconds",
                                    "legendFormat": "Build Duration"
                                  }
                                ],
                                "yaxes": [
                                  {
                                    "format": "ms"
                                  },
                                  {
                                    "format": "short"
                                  }
                                ],
                                "gridPos": {
                                  "x": 0,
                                  "y": 0,
                                  "w": 12,
                                  "h": 6
                                }
                              }
                            ],
                            "time": {
                              "from": "now-6h",
                              "to": "now"
                            }
                          },
                          "overwrite": false
                        }
                    '''
                    
                    def response = httpRequest(
                        acceptType: 'APPLICATION_JSON',
                        contentType: 'APPLICATION_JSON',
                        httpMode: 'POST',
                        requestBody: grafanaDashboardConfig,
                        responseHandle: 'NONE',
                        url: 'http://192.168.1.3:3000/api/dashboards/db'
                    )

                    if (response.getResponseCode() != 200) {
                        error "Failed to create Grafana dashboard: ${response.getResponseCode()}"
                    }
                }
            }
        }
    }
}
